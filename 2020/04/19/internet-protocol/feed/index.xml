<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Internet Protocol	</title>
	<atom:link href="/2020/04/19/internet-protocol/feed/" rel="self" type="application/rss+xml" />
	<link>/2020/04/19/internet-protocol/</link>
	<description>Arya Dharmaadi&#039;s Blog</description>
	<lastBuildDate>Mon, 20 Apr 2020 02:25:29 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.2</generator>
	<item>
		<title>
		By: Ni Kadek Chita Dwi Chayani		</title>
		<link>/2020/04/19/internet-protocol/#comment-45</link>

		<dc:creator><![CDATA[Ni Kadek Chita Dwi Chayani]]></dc:creator>
		<pubDate>Mon, 20 Apr 2020 02:25:29 +0000</pubDate>
		<guid isPermaLink="false">/?p=626#comment-45</guid>

					<description><![CDATA[Nama : Ni Kadek Chita Dwi Chayani
NIM : 1905551024
Kelas : Jaringan Komputer (A)
Komponen pada IPv4 Header adalah sebagai berikut.
1. Version = Field 4-bit ini menunjukkan versi IP dari Header paket, dimana untuk IP versi 4 diatur dalam nilai biner berupa 0100 dari nilai 4.
2. Internet Header Length (IHL) = Field 4-bit ini menunjukkan panjang Header dari paket IP dengan kelipatan 32-bit. Nilai minimum dari field ini adalah 5 yang mengindikasikan bahwa 5 x 32 bit = 160-bit : 8 = 20 byte, sedangkan untuk nilai maksimumnya adalah 15 yang mengindikasikan bahwa 15 x 32 = 480-bit : 8 = 60 byte.
3.Identification = Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan.. Jika panjang paket yang sebenarnya melebihi medium transmisi yang akan dilewati sesuai dengan standar Maximum Transmission Unit (MTU) maka paket-paket harus difragmentasi menjadi paket yang lebih kecil.
4. Time To Live (TTL) = Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya. Saat ini TTL menggunakan ukuran metric hop count sebagai nilai dari fieldnya, dimana setiap kali paket tiba dari router ke router maka setiap router akan mengurangi nilai hop. Ketika nilai TTL mencapai nol maka router akan membuang paket tersebut dan memberikan pesan bahwa paket telah Melebihi Waktu ICMP. Nilai TTL yang biasanya sering dipakai adalah sebesar 15 dan 32.
5. Protocol = Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan. Nilai dari jenis protokol ditentukan dari List of IP Protocol Numbers, misalnya informasi paket akan ditujukan melalui protokol ICMP maka Field ini akan diatur dalam nilai Hexa 0x01 atau biner 0000 0001.]]></description>
			<content:encoded><![CDATA[<p>Nama : Ni Kadek Chita Dwi Chayani<br />
NIM : 1905551024<br />
Kelas : Jaringan Komputer (A)<br />
Komponen pada IPv4 Header adalah sebagai berikut.<br />
1. Version = Field 4-bit ini menunjukkan versi IP dari Header paket, dimana untuk IP versi 4 diatur dalam nilai biner berupa 0100 dari nilai 4.<br />
2. Internet Header Length (IHL) = Field 4-bit ini menunjukkan panjang Header dari paket IP dengan kelipatan 32-bit. Nilai minimum dari field ini adalah 5 yang mengindikasikan bahwa 5 x 32 bit = 160-bit : 8 = 20 byte, sedangkan untuk nilai maksimumnya adalah 15 yang mengindikasikan bahwa 15 x 32 = 480-bit : 8 = 60 byte.<br />
3.Identification = Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan.. Jika panjang paket yang sebenarnya melebihi medium transmisi yang akan dilewati sesuai dengan standar Maximum Transmission Unit (MTU) maka paket-paket harus difragmentasi menjadi paket yang lebih kecil.<br />
4. Time To Live (TTL) = Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya. Saat ini TTL menggunakan ukuran metric hop count sebagai nilai dari fieldnya, dimana setiap kali paket tiba dari router ke router maka setiap router akan mengurangi nilai hop. Ketika nilai TTL mencapai nol maka router akan membuang paket tersebut dan memberikan pesan bahwa paket telah Melebihi Waktu ICMP. Nilai TTL yang biasanya sering dipakai adalah sebesar 15 dan 32.<br />
5. Protocol = Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan. Nilai dari jenis protokol ditentukan dari List of IP Protocol Numbers, misalnya informasi paket akan ditujukan melalui protokol ICMP maka Field ini akan diatur dalam nilai Hexa 0x01 atau biner 0000 0001.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Ni Putu Reza Faby Yolanda		</title>
		<link>/2020/04/19/internet-protocol/#comment-44</link>

		<dc:creator><![CDATA[Ni Putu Reza Faby Yolanda]]></dc:creator>
		<pubDate>Mon, 20 Apr 2020 01:24:35 +0000</pubDate>
		<guid isPermaLink="false">/?p=626#comment-44</guid>

					<description><![CDATA[Nama : Ni Putu Reza Faby Yolanda
NIM : 1905551025

5 komponen pada IPv4 Header adalah  

1. Identification
Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan.

2. Flags
Field 3-bit ini digunakan untuk mengatur tindakan pada router untuk diperbolehkan atau tidaknya melakukan fragmentasi pada paket.

3. Fragment Offset
Field 13-bit ini digunakan untuk menentukan offset dari awal header sampai awal fragment yang diukur dalam format 8 byte (64-bit).

4. Time To Live (TTL)
Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya.

5.Protocol
Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan.

6. Total Length
Field 16-bit ini menunjukkan panjang keseluruhan paket IP termasuk Header dan Data dalam bentuk byte.]]></description>
			<content:encoded><![CDATA[<p>Nama : Ni Putu Reza Faby Yolanda<br />
NIM : 1905551025</p>
<p>5 komponen pada IPv4 Header adalah  </p>
<p>1. Identification<br />
Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan.</p>
<p>2. Flags<br />
Field 3-bit ini digunakan untuk mengatur tindakan pada router untuk diperbolehkan atau tidaknya melakukan fragmentasi pada paket.</p>
<p>3. Fragment Offset<br />
Field 13-bit ini digunakan untuk menentukan offset dari awal header sampai awal fragment yang diukur dalam format 8 byte (64-bit).</p>
<p>4. Time To Live (TTL)<br />
Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya.</p>
<p>5.Protocol<br />
Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan.</p>
<p>6. Total Length<br />
Field 16-bit ini menunjukkan panjang keseluruhan paket IP termasuk Header dan Data dalam bentuk byte.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: 1805551063_Septiana Eka Arwanda Riski		</title>
		<link>/2020/04/19/internet-protocol/#comment-43</link>

		<dc:creator><![CDATA[1805551063_Septiana Eka Arwanda Riski]]></dc:creator>
		<pubDate>Mon, 20 Apr 2020 00:31:14 +0000</pubDate>
		<guid isPermaLink="false">/?p=626#comment-43</guid>

					<description><![CDATA[Version
Field 4-bit ini menunjukkan versi IP dari Header paket, dimana untuk IP versi 4 diatur dalam nilai biner berupa 0100 dari nilai 4.
Internet Header Length (IHL)
Field 4-bit ini menunjukkan panjang Header dari paket IP dengan kelipatan 32-bit. Nilai minimum dari field ini adalah 5 yang mengindikasikan bahwa 5 x 32 bit = 160-bit : 8 = 20 byte, sedangkan untuk nilai maksimumnya adalah 15 yang mengindikasikan bahwa 15 x 32 = 480-bit : 8 = 60 byte
Differentiated Service Code Point (DSCP).
Type of service Field ini digunakan untuk menentukan kualitas transmisi dari sebuah datagram IP yang memiliki panjang 8 bit. ToS sendiri sekarang dikenal sebagai Differentiated Services Code Point (DSCP) yang digunakan untuk menandakan jenis Quality of Service (QoS) yang digunakan oleh datagram yang bersangkutan untuk disampaikan ke router-router internetwork.  
Total Length
Total Length dapat didefinisikan panjang keseluruhan dari datagram/paket IP, dimana mencakup header IP dan data yang didalamnya dalam bentuk byte.  Minimum-panjang datagram adalah 20 byte (header 20-byte + 0 byte data) dan maksimal adalah 65.535 byte ,
Identification
Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan. Jika panjang paket yang sebenarnya melebihi medium transmisi yang akan dilewati sesuai dengan standar Maximum Transmission Unit (MTU) maka paket-paket harus difragmentasi menjadi paket yang lebih kecil dan harus unik dari sebuah IP datagram asli untuk kemudian akan disusun kembali setelahnya. Parameter ini yang akan digunakan untuk fregmentasi dan penyusunan kembali.
Flags
Field 3-bit ini digunakan untuk mengatur tindakan pada router untuk diperbolehkan atau tidaknya melakukan fragmentasi pada paket, dengan rincian sebagai berikut :
Bit pertama tidak digunakan dan diatur dengan nilai “0”
Bit kedua digunakan untuk mengatur nilai Dont Fragment (DF) dimana ketika diatur dengan nilai “1” maka router tidak dapat melakukan fragmentasi terhadap paket. Jika paket tidak dapat diteruskan tanpa dilakukan fragmentasi terlebih dahulu, maka router akan membuang paket dan mengirim pesan error. Fungsi ini dapat digunakan untuk melakukan pengujian MTU dalam suatu network baik secara otomatis melalui software host IP ataupun secara manual dengan menggunakan ping atau traceroute.
Bit ketiga digunakan untuk mengatur nilai More Fragment (MF) dimana ketika diatur dengan nilai “0” maka fragmentasi akan berhenti, namun ketika diatur dengan nilai “1”maka fragmentasi akan berlangsung lagi.
Fragment Offset
Field 13-bit ini digunakan untuk menentukan offset dari awal header sampai awal fragment yang diukur dalam format 8 byte (64-bit). Field ini memungkinkan potongan-potongan fragment yang datang secara tidak berurutan dapat disusun kembali sesuai dengan urutan aslinya. Berikut adalah contoh menentukan offset dari sebuah paket :
Misalnya untuk MTU 1.500 byte dan ukuran Header 20 byte maka fragment offsetnya akan kelipatan 185, dimana nilai ini diambil dari (MTU – (MTU + Header)) / 8 = (1500 – 1520) / 8 = 185. Kelipatan ini dimulai dari 0, 185, 370, 555, 740, dst.
Hal ini berlaku hanya untuk paket yang terfragmentasi hanya pada satu router, namun untuk paket yang akan terfragmentasi pada router lain dapat berbeda seperti berikut ini :
Misalnya untuk panjang paket sebesar 4500 byte dan ukuran Header 20 byte, sehingga ukuran paket keseluruhan adalah 4520 byte dan paket akan dikirim melalui link dengan MTU 2500 byte. Maka akan menjadi dua fragment :
Cara mendapatkan nilai offset-nya adalah sebagai berikut :
Data Byte diperoleh dari hasil Total Lenght – Header Byte = 2480, fragment offset pertama selalu diawali dengan nilai “0”. Panjang paket sebesar 2500 karena disesuaikan dengan nilai MTU.
Nilai Fragment berikutnya diperoleh dari nilai Fragment offset sebelumnya + (Data Byte / 8), yaitu 0 + (2480/8) = 310.
Nilai MF pada fragment pertama bernilai “1” dikarenakan panjang paket melebihi MTU, sehingga masih perlu dilakukan fragmentasi lagi.
Nilai Data Byte dari Fragment kedua diperoleh dari Total Length – nilai Data Byte sebelumnya, yaitu 4500 – 2480 = 2020. Nilai Header byte tetap 20 byte, sehingga dari hasil ini dapat ditentukan Panjang Paket yang tersisa sebesar 2020 + 20 = 2040.
Nilai MF pada fragment kedua bernilai “0” dikarenakan Jumlah Byte tidak melebihi MTU.
Time To Live (TTL)
Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya. Saat ini TTL menggunakan ukuran metric hop count sebagai nilai dari fieldnya, dimana setiap kali paket tiba dari router ke router maka setiap router akan mengurangi nilai hop. Ketika nilai TTL mencapai nol maka router akan membuang paket tersebut dan memberikan pesan bahwa paket telah Melebihi Waktu ICMP. Nilai TTL yang biasanya sering dipakai adalah sebesar 15 dan 32.
Protocol
Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan. Nilai dari jenis protokol ditentukan dari List of IP Protocol Numbers, misalnya informasi paket akan ditujukan melalui protokol ICMP maka Field ini akan diatur dalam nilai Hexa 0x01 atau biner 0000 0001.
Header Checksum
Field 16-bit ini digunakan untuk mendeteksi error pada Header IP. Ketika paket tiba, router akan menghitung dari checksum header dan membandingkannya dengan field checksum dimana jika nilai tidak cocok maka router akan membuang atau mengabaikan paket. Untuk menghitung checksum dari semua field di dalam Header IP, maka nilai checksum akan diatur ke nilai nol. Untuk lebih jelasnya, berikut adalah contoh perhitungan dari checksum header :
Misalnya, router menerima paket header IP sebesar 20 byte dalam bentuk bilangan hexadecimal berupa  4500003044224000800600008C7C19ACAE241E2B16. Pertama, menghitung checksum headernya dengan membagi paket dalam masing-masing nilai sebesar 2 byte yang kemudian akan dijumlahkan sebagai berikut :
450016 + 003016 + 442216 + 400016 + 800616 + 000016 + 8C7C16 + 19AC16 + AE2416 + 1E2B16 = 0002BBCF total 32-bit.
000216 + BBCF16 = BBD116 = 10111011110100012
~BBCF = 01000100001011102¬ = 442E16 (Nilai komplemen dari checksum header)
Selanjutnya adalah membandingkan nilai Checksum Header dengan nilai Field Checksum sebesar (0), cara untuk validasinya adalah sebagai berikut :
450016 + 003016 + 442216 + 400016 + 800616 + 000016 + 8C7C16 + 19AC16 + AE2416 + 1E2B16 + 442E16 = 2FFFD16
000216 + FFFD16 = FFFF16 = 11111111111111112
~FFFF16 = 000016
Dari hasil perhitungan dan perbadingan ini, maka dapat disimpulkan bahwa tidak terdapat error pada Header IP tersebut. Sebagai catatan, ketika sebuah paket tiba setiap router maka nilai pada field TTL juga ikut berkurang sehingga router harus menghitung checksum yang baru setiap kali nilai TTL berubah.
Source dan Destination Address
Kedua Field ini masing-masing sebesar 32-bit yang berisi informasi mengenai alamat IP dari Host pengirim dan penerima / tujuan. Mengenai Format Alamat dari IP versi 4 sebelumnya telah dibahas pada artike “Tips Mudah Subnetting”.
Options
Field ini bersifat optional dan hanya digunakan apabila nilai IHL atau panjang header diatas 5 = 20 byte, field ini biasanya juga sering juga disebut dengan panjang header yang variable. Field ini biasanya digunakan untuk keperluan testing dan debugging. Kemungkinan options yang dapat dimasukkan ke dalam header adalah sebagai berikut :
Copied
Option ini berukuran 1-bit, digunakan jika options perlu disalin ke semua fragment dari paket yang terfregmentasi ketika nilainya diatur ke “1”.
Option Class
Option ini berukuran 2-bit, digunakan untuk kategori option yang umum. Misalnya “0” untuk option kontrol dan “2” untuk debugging dan pengukuran sedangkan untuk 1 dan 3 dicadangkan.
Option Number
Option ini berukuran 5-bit, digunakan untuk menentukan option.
Option Length
Option ini berukuran 8-bit, digunakan untuk menunjukkan ukuran seluruh option termasuk untuk field ini.
Option Data
Option ini berukuran Variabel yang berisi data option khusus/spesifik.]]></description>
			<content:encoded><![CDATA[<p>Version<br />
Field 4-bit ini menunjukkan versi IP dari Header paket, dimana untuk IP versi 4 diatur dalam nilai biner berupa 0100 dari nilai 4.<br />
Internet Header Length (IHL)<br />
Field 4-bit ini menunjukkan panjang Header dari paket IP dengan kelipatan 32-bit. Nilai minimum dari field ini adalah 5 yang mengindikasikan bahwa 5 x 32 bit = 160-bit : 8 = 20 byte, sedangkan untuk nilai maksimumnya adalah 15 yang mengindikasikan bahwa 15 x 32 = 480-bit : 8 = 60 byte<br />
Differentiated Service Code Point (DSCP).<br />
Type of service Field ini digunakan untuk menentukan kualitas transmisi dari sebuah datagram IP yang memiliki panjang 8 bit. ToS sendiri sekarang dikenal sebagai Differentiated Services Code Point (DSCP) yang digunakan untuk menandakan jenis Quality of Service (QoS) yang digunakan oleh datagram yang bersangkutan untuk disampaikan ke router-router internetwork.<br />
Total Length<br />
Total Length dapat didefinisikan panjang keseluruhan dari datagram/paket IP, dimana mencakup header IP dan data yang didalamnya dalam bentuk byte.  Minimum-panjang datagram adalah 20 byte (header 20-byte + 0 byte data) dan maksimal adalah 65.535 byte ,<br />
Identification<br />
Field 16-bit ini digunakan untuk mengidentifikasi paket IP yang akan difragmentasikan. Jika panjang paket yang sebenarnya melebihi medium transmisi yang akan dilewati sesuai dengan standar Maximum Transmission Unit (MTU) maka paket-paket harus difragmentasi menjadi paket yang lebih kecil dan harus unik dari sebuah IP datagram asli untuk kemudian akan disusun kembali setelahnya. Parameter ini yang akan digunakan untuk fregmentasi dan penyusunan kembali.<br />
Flags<br />
Field 3-bit ini digunakan untuk mengatur tindakan pada router untuk diperbolehkan atau tidaknya melakukan fragmentasi pada paket, dengan rincian sebagai berikut :<br />
Bit pertama tidak digunakan dan diatur dengan nilai “0”<br />
Bit kedua digunakan untuk mengatur nilai Dont Fragment (DF) dimana ketika diatur dengan nilai “1” maka router tidak dapat melakukan fragmentasi terhadap paket. Jika paket tidak dapat diteruskan tanpa dilakukan fragmentasi terlebih dahulu, maka router akan membuang paket dan mengirim pesan error. Fungsi ini dapat digunakan untuk melakukan pengujian MTU dalam suatu network baik secara otomatis melalui software host IP ataupun secara manual dengan menggunakan ping atau traceroute.<br />
Bit ketiga digunakan untuk mengatur nilai More Fragment (MF) dimana ketika diatur dengan nilai “0” maka fragmentasi akan berhenti, namun ketika diatur dengan nilai “1”maka fragmentasi akan berlangsung lagi.<br />
Fragment Offset<br />
Field 13-bit ini digunakan untuk menentukan offset dari awal header sampai awal fragment yang diukur dalam format 8 byte (64-bit). Field ini memungkinkan potongan-potongan fragment yang datang secara tidak berurutan dapat disusun kembali sesuai dengan urutan aslinya. Berikut adalah contoh menentukan offset dari sebuah paket :<br />
Misalnya untuk MTU 1.500 byte dan ukuran Header 20 byte maka fragment offsetnya akan kelipatan 185, dimana nilai ini diambil dari (MTU – (MTU + Header)) / 8 = (1500 – 1520) / 8 = 185. Kelipatan ini dimulai dari 0, 185, 370, 555, 740, dst.<br />
Hal ini berlaku hanya untuk paket yang terfragmentasi hanya pada satu router, namun untuk paket yang akan terfragmentasi pada router lain dapat berbeda seperti berikut ini :<br />
Misalnya untuk panjang paket sebesar 4500 byte dan ukuran Header 20 byte, sehingga ukuran paket keseluruhan adalah 4520 byte dan paket akan dikirim melalui link dengan MTU 2500 byte. Maka akan menjadi dua fragment :<br />
Cara mendapatkan nilai offset-nya adalah sebagai berikut :<br />
Data Byte diperoleh dari hasil Total Lenght – Header Byte = 2480, fragment offset pertama selalu diawali dengan nilai “0”. Panjang paket sebesar 2500 karena disesuaikan dengan nilai MTU.<br />
Nilai Fragment berikutnya diperoleh dari nilai Fragment offset sebelumnya + (Data Byte / 8), yaitu 0 + (2480/8) = 310.<br />
Nilai MF pada fragment pertama bernilai “1” dikarenakan panjang paket melebihi MTU, sehingga masih perlu dilakukan fragmentasi lagi.<br />
Nilai Data Byte dari Fragment kedua diperoleh dari Total Length – nilai Data Byte sebelumnya, yaitu 4500 – 2480 = 2020. Nilai Header byte tetap 20 byte, sehingga dari hasil ini dapat ditentukan Panjang Paket yang tersisa sebesar 2020 + 20 = 2040.<br />
Nilai MF pada fragment kedua bernilai “0” dikarenakan Jumlah Byte tidak melebihi MTU.<br />
Time To Live (TTL)<br />
Field 8-bit ini digunakan untuk mengatasi masalah Rooting Loop, dimana ketika sebuah paket hanya berputar-putar dijaringan dan tidak pernah mencapai tujuannya. Saat ini TTL menggunakan ukuran metric hop count sebagai nilai dari fieldnya, dimana setiap kali paket tiba dari router ke router maka setiap router akan mengurangi nilai hop. Ketika nilai TTL mencapai nol maka router akan membuang paket tersebut dan memberikan pesan bahwa paket telah Melebihi Waktu ICMP. Nilai TTL yang biasanya sering dipakai adalah sebesar 15 dan 32.<br />
Protocol<br />
Field 8-bit ini mengidentifikasi jenis protokol yang digunakan untuk informasi paket yang akan ditujukan. Nilai dari jenis protokol ditentukan dari List of IP Protocol Numbers, misalnya informasi paket akan ditujukan melalui protokol ICMP maka Field ini akan diatur dalam nilai Hexa 0x01 atau biner 0000 0001.<br />
Header Checksum<br />
Field 16-bit ini digunakan untuk mendeteksi error pada Header IP. Ketika paket tiba, router akan menghitung dari checksum header dan membandingkannya dengan field checksum dimana jika nilai tidak cocok maka router akan membuang atau mengabaikan paket. Untuk menghitung checksum dari semua field di dalam Header IP, maka nilai checksum akan diatur ke nilai nol. Untuk lebih jelasnya, berikut adalah contoh perhitungan dari checksum header :<br />
Misalnya, router menerima paket header IP sebesar 20 byte dalam bentuk bilangan hexadecimal berupa  4500003044224000800600008C7C19ACAE241E2B16. Pertama, menghitung checksum headernya dengan membagi paket dalam masing-masing nilai sebesar 2 byte yang kemudian akan dijumlahkan sebagai berikut :<br />
450016 + 003016 + 442216 + 400016 + 800616 + 000016 + 8C7C16 + 19AC16 + AE2416 + 1E2B16 = 0002BBCF total 32-bit.<br />
000216 + BBCF16 = BBD116 = 10111011110100012<br />
~BBCF = 01000100001011102¬ = 442E16 (Nilai komplemen dari checksum header)<br />
Selanjutnya adalah membandingkan nilai Checksum Header dengan nilai Field Checksum sebesar (0), cara untuk validasinya adalah sebagai berikut :<br />
450016 + 003016 + 442216 + 400016 + 800616 + 000016 + 8C7C16 + 19AC16 + AE2416 + 1E2B16 + 442E16 = 2FFFD16<br />
000216 + FFFD16 = FFFF16 = 11111111111111112<br />
~FFFF16 = 000016<br />
Dari hasil perhitungan dan perbadingan ini, maka dapat disimpulkan bahwa tidak terdapat error pada Header IP tersebut. Sebagai catatan, ketika sebuah paket tiba setiap router maka nilai pada field TTL juga ikut berkurang sehingga router harus menghitung checksum yang baru setiap kali nilai TTL berubah.<br />
Source dan Destination Address<br />
Kedua Field ini masing-masing sebesar 32-bit yang berisi informasi mengenai alamat IP dari Host pengirim dan penerima / tujuan. Mengenai Format Alamat dari IP versi 4 sebelumnya telah dibahas pada artike “Tips Mudah Subnetting”.<br />
Options<br />
Field ini bersifat optional dan hanya digunakan apabila nilai IHL atau panjang header diatas 5 = 20 byte, field ini biasanya juga sering juga disebut dengan panjang header yang variable. Field ini biasanya digunakan untuk keperluan testing dan debugging. Kemungkinan options yang dapat dimasukkan ke dalam header adalah sebagai berikut :<br />
Copied<br />
Option ini berukuran 1-bit, digunakan jika options perlu disalin ke semua fragment dari paket yang terfregmentasi ketika nilainya diatur ke “1”.<br />
Option Class<br />
Option ini berukuran 2-bit, digunakan untuk kategori option yang umum. Misalnya “0” untuk option kontrol dan “2” untuk debugging dan pengukuran sedangkan untuk 1 dan 3 dicadangkan.<br />
Option Number<br />
Option ini berukuran 5-bit, digunakan untuk menentukan option.<br />
Option Length<br />
Option ini berukuran 8-bit, digunakan untuk menunjukkan ukuran seluruh option termasuk untuk field ini.<br />
Option Data<br />
Option ini berukuran Variabel yang berisi data option khusus/spesifik.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
