<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>framework &#8211; Catatan Kecil</title>
	<atom:link href="/tag/framework/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Arya Dharmaadi&#039;s Blog</description>
	<lastBuildDate>Tue, 20 Oct 2020 13:22:40 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.2</generator>

<image>
	<url>/wp-content/uploads/2016/02/cropped-java-65x65.png</url>
	<title>framework &#8211; Catatan Kecil</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Bootstrap</title>
		<link>/2020/10/20/bootstrap/</link>
					<comments>/2020/10/20/bootstrap/#respond</comments>
		
		<dc:creator><![CDATA[aryadharmaadi]]></dc:creator>
		<pubDate>Tue, 20 Oct 2020 13:22:36 +0000</pubDate>
				<category><![CDATA[Kuliah]]></category>
		<category><![CDATA[Pemrograman Web]]></category>
		<category><![CDATA[bootstrap]]></category>
		<category><![CDATA[css]]></category>
		<category><![CDATA[framework]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[web]]></category>
		<guid isPermaLink="false">/?p=736</guid>

					<description><![CDATA[Berikut adalah materi tentang Bootstrap, sebuah framework CSS yang sangat bermanfaat dalam pembuatan desain sebuah halaman web.]]></description>
										<content:encoded><![CDATA[
<p>Berikut adalah materi tentang Bootstrap, sebuah framework CSS yang sangat bermanfaat dalam pembuatan desain sebuah halaman web.</p>


<div class="ead-preview"><div class="ead-document" style="position: relative;"><div class="ead-iframe-wrapper"><iframe src="//docs.google.com/viewer?url=%2Fwp-content%2Fuploads%2F2020%2F10%2FMinggu-4.-Bootstrap.pdf&amp;embedded=true&amp;hl=en" title="Embedded Document" class="ead-iframe" style="width: 100%;height: 500px;border: none;visibility: hidden;"></iframe></div>			<div class="ead-document-loading" style="width:100%;height:100%;position:absolute;left:0;top:0;z-index:10;">
				<div class="ead-loading-wrap">
					<div class="ead-loading-main">
						<div class="ead-loading">
							<img decoding="async" src="/wp-content/plugins/embed-any-document/images/loading.svg" width="55" height="55" alt="Loader">
							<span>Loading&#8230;</span>
						</div>
					</div>
					<div class="ead-loading-foot">
						<div class="ead-loading-foot-title">
							<img decoding="async" src="/wp-content/plugins/embed-any-document/images/EAD-logo.svg" alt="EAD Logo" width="36" height="23"/>
							<span>Taking too long?</span>
						</div>
						<p>
							<div class="ead-document-btn ead-reload-btn" role="button">
								<img decoding="async" src="/wp-content/plugins/embed-any-document/images/reload.svg" alt="Reload" width="12" height="12"/> Reload document							</div>
							<span>|</span>
							<a href="/wp-content/uploads/2020/10/Minggu-4.-Bootstrap.pdf" class="ead-document-btn" target="_blank">
								<img loading="lazy" decoding="async" src="/wp-content/plugins/embed-any-document/images/open.svg" alt="Open" width="12" height="12"/> Open in new tab							</a>
					</div>
				</div>
			</div>
		</div></div>]]></content:encoded>
					
					<wfw:commentRss>/2020/10/20/bootstrap/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Pengenalan Framework CodeIgniter</title>
		<link>/2015/11/27/pengenalan-framework-codeigniter/</link>
					<comments>/2015/11/27/pengenalan-framework-codeigniter/#respond</comments>
		
		<dc:creator><![CDATA[aryadharmaadi]]></dc:creator>
		<pubDate>Fri, 27 Nov 2015 01:43:58 +0000</pubDate>
				<category><![CDATA[Kuliah]]></category>
		<category><![CDATA[Pemrograman Web]]></category>
		<category><![CDATA[codeigniter]]></category>
		<category><![CDATA[framework]]></category>
		<category><![CDATA[php]]></category>
		<guid isPermaLink="false">/?p=48</guid>

					<description><![CDATA[Pada materi kali ini, akan dibahas mengenai pengembangan sebuah web yang lebih cepat dan efektif dibandingkan dengan menggunakan cara biasa. Cara yang digunakan adalah dengan memanfaatkan sebuah <a class="mh-excerpt-more" href="/2015/11/27/pengenalan-framework-codeigniter/" title="Pengenalan Framework CodeIgniter">[...]</a>]]></description>
										<content:encoded><![CDATA[<p>Pada materi kali ini, akan dibahas mengenai pengembangan sebuah web yang lebih cepat dan efektif dibandingkan dengan menggunakan cara biasa. Cara yang digunakan adalah dengan memanfaatkan sebuah framework PHP yang terkenal, yaitu Framework CodeIgniter.</p>
<p><strong>APA ITU FRAMEWORK?</strong></p>
<p>?Framework merupakan sebuah <b>KERANGKA KERJA </b>yang <b>MEMUDAHKAN PENGEMBANG </b>aplikasi untuk membangun software sesuai dengan bahasa pemrograman tertentu. ?Framework untuk bahasa pemrograman PHP umumnya terdiri dari <b>SEKUMPULAN FOLDER  </b>yang berisi file-file PHP, dimana file-file tersebut merupakan <b>CLASS LIBRARY, HELPER, PLUGIN</b>, atau <b>KONFIGURASI</b> lainnya.</p>
<p><strong>MENGAPA MENGGUNAKAN FRAMEWORK?</strong></p>
<p>?Pembuatan aplikasi dengan memanfaatkan framework akan sangat membantu dari segi <b>KECEPATAN PENGEMBANGAN</b> dan efisiensi source code aplikasi. ?Hal tersebut disebabkan karena:</p>
<ul>
<li>?pengembang tinggal mengikuti alur framework, ?</li>
<li>pengembang bisa memanfaatkan library dari framework untuk perintah-perintah umum, seperti CRUD (Create Read Update Delete) data, session, dll,</li>
<li>setiap project yang dibuat akan memiliki alur yang sama persis, sehingga saat pembuatan project berikutnya bisa meng-copy project sebelumnya, lalu sedikit dimodifikasi</li>
</ul>
<p><strong>BEDA FRAMEWORK DENGAN CMS</strong></p>
<p>?Framework berbeda jika dibandingkan dengan CMS (Content Management System), walaupun sama-sama mempermudah pembuatan web. ?Pada CMS (misalnya wordpress), pengembang tidak perlu menuliskan code program PHP karena semuanya sudah jadi, tinggal mengatur konten dan tampilannya saja. ?Sedangkan Framework, pengembang harus menuliskan code program PHP sesuai dengan ruang lingkup yang diatur oleh framework.</p>
<p><strong>FRAMEWORK CI</strong></p>
<p>?CodeIgniter (CI) merupakan framework PHP yang tangguh dan sangat mudah dipelajari sehingga diperuntukkan kepada developer PHP yang ingin membangun aplikasi web yang full-featured dengan mudah dan elegan. ?CI hadir dengan dokumentasi yang lengkap dan menyediakan contoh-contoh koding yang bervariasi. ?CI juga memiliki komunitas yang besar sehingga ada banyak forum yang siap membantu ketika  anda merasa kesulitan dalam menggunakan CI.</p>
<p><strong>VERSI FRAMEWORK CI</strong></p>
<p>?Framework CI dibangun oleh EllisLab. ?EllisLab masih terus menyempurnakan Framework CI, baik dari segi keamanan (security), penanganan error atau bug, dan penambahan fitur-fitur. ?Saat ini framework CI sudah berada pada versi 3.0.3 dan biasanya setiap bulan diperbaharui dengan me-release versi terbaru. ?Framework CI bisa didownload secara gratis di situs resminya <a href="http://codeigniter.com/">http://codeigniter.com/</a></p>
<p><strong>FITUR UTAMA FRAMEWORK CI</strong></p>
<ul>
<li>?Model-View-Controller Based System</li>
<li>?Query Builder Database Support</li>
<li>?Form and Data Validation</li>
<li>?Security and XSS Filtering</li>
<li>?Session Management</li>
<li>?Email Sending Class. Supports Attachments, HTML/Text email, multiple protocols (sendmail, SMTP, and Mail)</li>
<li>?Image Manipulation Library (cropping, resizing, rotating, etc.)</li>
<li>?File Uploading Class</li>
<li>?FTP Class</li>
<li>?Localization</li>
<li>?Pagination Data</li>
<li>?Encryption</li>
<li>?Search-engine Friendly</li>
<li>?URLs Flexible</li>
<li>?URI Routing</li>
<li>?Large library of “helper” functions</li>
</ul>
<p><strong>KONSEP MVC</strong></p>
<p>?Framework CI menggunakan metode pengembangan berbasis MVC (Model-View-Controller) sehingga developer wajib memahami konsep MVC sebelum menggunakan Framework CI. ?Konsep MVC adalah konsep pemisahan antara logik dari aplikasi (Controller) dengan tampilan aplikasi (View) dan database aplikasi (Model).</p>
<p>?Umumnya, bagian Model dikerjakan oleh programmer sekaligus database analyst, dimana code-code di bagian ini merupakan code struktur data yang berisi koneksi dan fungsi di dalam pengolahan database. ?Sedangkan View dikerjakan oleh designer html, css, dan js karena code-code di bagian ini untuk menampilkan tampilan web yang menarik dan interaktif. ?Terakhir, Controller dikerjakan oleh programmer inti PHP karena menangani hubungan Model dengan View, algoritma, logic, HttpRequest, dll.</p>
<p><figure id="attachment_52" aria-describedby="caption-attachment-52" style="width: 1341px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2015/11/mvc.png"><img loading="lazy" decoding="async" class="size-full wp-image-52" src="/wp-content/uploads/2015/11/mvc.png" alt="Arsitektur MVC pada CI" width="1341" height="806" srcset="/wp-content/uploads/2015/11/mvc.png 1341w, /wp-content/uploads/2015/11/mvc-300x180.png 300w, /wp-content/uploads/2015/11/mvc-1024x615.png 1024w" sizes="(max-width: 1341px) 100vw, 1341px" /></a><figcaption id="caption-attachment-52" class="wp-caption-text">Arsitektur MVC pada CI</figcaption></figure></p>
<p>&nbsp;</p>
<p><strong>STRUKTUR DIREKTORI CI</strong></p>
<p>Setelah anda berhasil mendownload framework CI (dalam bentuk rar), maka ekstrak-lah file tersebut dan simpan di directory localhost anda. Berikut merupakan folder-folder yang terdapat di dalam framework CI.</p>
<p><strong><br />
<a href="/wp-content/uploads/2015/11/ci.png"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-53" src="/wp-content/uploads/2015/11/ci.png" alt="ci" width="759" height="298" srcset="/wp-content/uploads/2015/11/ci.png 759w, /wp-content/uploads/2015/11/ci-300x118.png 300w" sizes="(max-width: 759px) 100vw, 759px" /></a> </strong></p>
<p>&nbsp;</p>
<p>Terdapat 3 folder utama pada framework CI. Folder &#8216;application&#8217; merupakan area kerja dari pengembang web karena code-code yang akan dikembangkan akan dituliskan di direktori tersebut. Kemudian folder &#8216;system&#8217; merupakan folder yang mengandung definisi kelas-kelas inti, helper, dan lain-lain yang sudah dibuat oleh pengembang CI. Terakhir, folder &#8216;user_guide&#8217; merupakan direktori yang berisi tutorial atau dokumentasi cara penggunaan framework CI.</p>
<p>Untuk pembuatan website, kita hanya diperkenankan untuk memodifikasi folder &#8216;application&#8217;. Isi dari folder tersebut adalah sebagai berikut:</p>
<p><strong><a href="/wp-content/uploads/2015/11/dir-application-ci.png"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-55" src="/wp-content/uploads/2015/11/dir-application-ci.png" alt="dir application ci" width="172" height="440" srcset="/wp-content/uploads/2015/11/dir-application-ci.png 172w, /wp-content/uploads/2015/11/dir-application-ci-117x300.png 117w" sizes="(max-width: 172px) 100vw, 172px" /></a></strong></p>
<p>FLOWCHART FRAMEWORK CI</p>
<p><a href="/wp-content/uploads/2015/11/appflowchart.gif"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-56" src="/wp-content/uploads/2015/11/appflowchart.gif" alt="appflowchart" width="697" height="205" /></a></p>
<p><strong>MEMULAI MENGGUNAKAN CI</strong></p>
<p>Secara umum, tahapan untuk menggunakan framework CI pertama kali adalah sebagai berikut:</p>
<ol>
<li>Konfigurasi Framework CI</li>
<li>Buat Library (jika membutuhkan library tambahan)</li>
<li>Persiapkan Model</li>
<li>Persiapkan Controller</li>
<li>Persiapkan View</li>
</ol>
<p><strong>KONFIGURASI CI</strong></p>
<ol>
<li>Buka folder config</li>
</ol>
<p><a href="/wp-content/uploads/2015/11/konfig-ci.png"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-54" src="/wp-content/uploads/2015/11/konfig-ci.png" alt="konfig ci" width="285" height="455" srcset="/wp-content/uploads/2015/11/konfig-ci.png 285w, /wp-content/uploads/2015/11/konfig-ci-188x300.png 188w" sizes="(max-width: 285px) 100vw, 285px" /></a></p>
<ol>
<li>Buka file config.php</li>
<li>Isilah  $config[&#8216;encryption_key&#8217;]</li>
<li>Buka file database.php</li>
<li>Isilah hostname, username, password, database</li>
<li>Buka file route.php</li>
<li>Tentukan $route[&#8216;default_controller&#8217;]</li>
</ol>
<p><strong>BUAT LIBRARY</strong></p>
<p>?Jika anda ingin membuat sebuah library, silahkan buka folder ‘libraries’. ?Namun, saat ini penulisan library baru belum dibutuhkan.</p>
<p><strong>PERSIAPKAN MODEL</strong></p>
<ol>
<li>?Buka folder ‘Models’ di folder ‘application’</li>
<li>?Buat file baru, misal ‘user_model.php’</li>
<li>?Buka file tersebut dan deklarasi kelas dengan nama yang sama dengan nama file tersebut</li>
<li>?Kelas yang baru dideklarasikan wajib menurunkan kelas ‘CI_model’</li>
</ol>
<pre class="lang:default decode:true " title="user_model.php">&lt;?php

class User_model extends CI_Model {

	var $tabel = "user";
	var $primary_key = "userid";

	function User_model(){
		 parent::__construct();
	}
	
	function get_data_by_pk($username){
		$this-&gt;db-&gt;select('*');
		$this-&gt;db-&gt;where($this-&gt;primary_key,$username);
		$result = $this-&gt;db-&gt;get($this-&gt;tabel);
		
		return $result-&gt;row();
	}
	
	
	function insert($data){
		return $this-&gt;db-&gt;insert($this-&gt;tabel,$data);	
	}
	
	function update($username,$data){
		$this-&gt;db-&gt;where($this-&gt;primary_key,$username);
		return $this-&gt;db-&gt;update($this-&gt;tabel,$data);
	}
	
	function delete($username){
		$this-&gt;db-&gt;where($this-&gt;primary_key,$username);
		return $this-&gt;db-&gt;delete($this-&gt;tabel);
	}
}

?&gt;</pre>
<p><strong>PERSIAPKAN CONTROLLER</strong></p>
<ol>
<li>?Buka folder ‘Controllers’ di folder ‘application’</li>
<li>?Buat file baru, misal ‘user.php’</li>
<li>?Buka file tersebut dan deklarasi kelas dengan nama yang sama dengan nama file tersebut</li>
<li>?Kelas yang baru dideklarasikan wajib menurunkan kelas ‘CI_Controller’</li>
</ol>
<pre class="lang:default decode:true " title="user.php">&lt;?php
defined('BASEPATH') OR exit('No direct script access allowed');

class User extends CI_Controller {
	 
	function __construct(){
		parent::__construct();
		$this-&gt;load-&gt;model('user_model','','TRUE');
		date_default_timezone_set("Asia/Singapore");
	}
	
	public function index(){		
		$this-&gt;load-&gt;view('home');
	}
	
	public function register(){
		$item['email'] = $this-&gt;input-&gt;post('email',true);
		$item['password'] = sha1($this-&gt;input-&gt;post('password',true));
		$item['nama_lengkap'] = $this-&gt;input-&gt;post('nama_lengkap',true);
		$item['alamat'] = $this-&gt;input-&gt;post('alamat',true);
		$item['phone'] = $this-&gt;input-&gt;post('phone',true);		
		$item['datetime'] = date("Y-m-d H:i:s");
		$item['userid'] = strtotime($item['datetime']);
		
		$this-&gt;user_model-&gt;insert($item);					
		redirect('/', 'refresh');
	}
}</pre>
<p><strong>PERSIAPKAN VIEW</strong></p>
<ol>
<li>?Buka folder ‘Views’ di folder ‘application’</li>
<li>?Buat file baru dengan nama misalnya ‘home.php’</li>
<li>?Isilah file tersebut dengan script-script html biasa untuk menampilkan halaman web</li>
</ol>
<pre class="lang:default decode:true " title="home.php">&lt;?php
defined('BASEPATH') OR exit('No direct script access allowed');
?&gt;
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
	&lt;title&gt;Halaman Awal&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="container"&gt;
	&lt;h1&gt;Registrasi&lt;/h1&gt;
	&lt;form method="post" action="&lt;? echo base_url().'index.php/'?&gt;user/register"&gt;
		&lt;input type="email" id="email" name="email" /&gt;
		&lt;input type="text" id="nama_lengkap" name="nama_lengkap" /&gt;
		&lt;input type="password" id="password" name="password" /&gt;
		&lt;input type="text" id="phone" name="phone" /&gt;
		&lt;textarea name="alamat" id="alamat" &gt;&lt;/textarea&gt;		
		&lt;button type="submit"&gt;SEND&lt;/button&gt;
	&lt;/form&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p><strong>PEMANGGILAN FUNGSI </strong></p>
<p>?Pemanggilan fungsi yang sudah dibuat pada class Controller bisa dipanggil melalui url dengan format:</p>
<p><i>host/index.php/class_name/function_name/data</i></p>
<p>Contoh:</p>
<p><i>http://locahost/codeigniter/index.php/user/index</i></p>
<p><strong>PENUTUP</strong></p>
<p>?Selain ringan dan cepat, CodeIgniter memiliki dokumentasi yang super lengkap disertai dengan contoh implementasi kodenya, sehingga hal ini menjadi salah satu alasan kuat mengapa banyak orang memilih CodeIgniter sebagai framework pilihannya.</p>
<p>?Slide materi di sini hanya membahas tahap dasar penggunaan CodeIgniter. Untuk pemanfaatan fitur-fitur unggulan CodeIgniter yang lainnya akan dibahas di slide yang lain.</p>
<p><strong>NEXT . . .</strong></p>
<p>?Web Service dan XML</p>
<p><strong>DOWNLOAD PDF</strong></p>
<p>Jika anda tertarik untuk membaca materi ini dalam bentuk powerpoint atau PDF, silahkan download secara GRATIS di <a href="http://adf.ly/1SOdTD" target="_blank">sini</a>.</p>
<p><strong>REFERENSI</strong></p>
<p>?<a href="http://codeigniter.com/">http://codeigniter.com/</a></p>
<p>?<a href="https://ellislab.com/codeigniter">https://</a><a href="https://ellislab.com/codeigniter">ellislab.com/codeigniter</a></p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/11/27/pengenalan-framework-codeigniter/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
